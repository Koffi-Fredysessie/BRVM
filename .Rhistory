mutate(
Decision_MACD = case_when(
Divergence == "Bullish Divergence" ~ "Achat",
Divergence == "Bearish Divergence" ~ "Vente",
is.na(Divergence) ~ "Conserver"
)
)
}
# Appliquer la fonction pour calculer les signaux MACD
dt_with_macd_signals <- calculate_macd_signals(dt_price)
# Fonction pour calculer les signaux d'achat, de vente ou de conserver basés sur les divergences MACD
calculate_macd_signals <- function(dt) {
dt %>%
mutate(
# Initialiser Price_Change avec NA à la première ligne
Price_Change = c(NA, diff(Close)),
# Calculer l'indicateur MACD
MACD = MACD(Cl(dt), nFast = 12, nSlow = 26, nSig = 9),
# Identifier les divergences
Divergence = ifelse(Hi(dt) < Hi(lag(dt)) & Price_Change < 0 & MACD > lag(MACD), "Bullish Divergence",
ifelse(Lo(dt) > Lo(lag(dt)) & Price_Change > 0 & MACD < lag(MACD), "Bearish Divergence", NA_character_))
) %>%
# Générer les signaux d'achat, de vente ou de conserver en fonction des divergences
mutate(
Decision_MACD = case_when(
Divergence == "Bullish Divergence" ~ "Achat",
Divergence == "Bearish Divergence" ~ "Vente",
is.na(Divergence) ~ "Conserver"
)
)
}
# Appliquer la fonction pour calculer les signaux MACD
dt_with_macd_signals <- calculate_macd_signals(dt_price)
rlang::last_trace()
rm(calculate_macd_signals)
# Fonction pour calculer les signaux d'achat, de vente ou de conserver basés sur les divergences MACD
calculate_macd_signals <- function(dt) {
dt %>%
mutate(
# Initialiser Price_Change avec NA à la première ligne
Price_Change = c(NA, diff(Close)),
# Calculer l'indicateur MACD
MACD = MACD(Cl(dt), nFast = 12, nSlow = 26, nSig = 9),
# Identifier les divergences
Divergence = ifelse(dt$High < lag(dt$High) & Price_Change < 0 & MACD > lag(MACD), "Bullish Divergence",
ifelse(dt$Low > lag(dt$Low) & Price_Change > 0 & MACD < lag(MACD), "Bearish Divergence", NA_character_))
) %>%
# Générer les signaux d'achat, de vente ou de conserver en fonction des divergences
mutate(
Decision_MACD = case_when(
Divergence == "Bullish Divergence" ~ "Achat",
Divergence == "Bearish Divergence" ~ "Vente",
is.na(Divergence) ~ "Conserver"
)
)
}
# Appliquer la fonction pour calculer les signaux MACD
dt_with_macd_signals <- calculate_macd_signals(dt_price)
# Fonction pour calculer les signaux d'achat, de vente ou de conserver basés sur les divergences MACD
calculate_macd_signals <- function(dt) {
dt %>%
mutate(
# Initialiser Price_Change avec NA à la première ligne
Price_Change = c(NA, diff(Close)),
# Calculer l'indicateur MACD
MACD = MACD(Cl(dt), nFast = 12, nSlow = 26, nSig = 9),
# Identifier les divergences
Divergence = ifelse(dt$High < lag(dt$High) & Price_Change < 0 & MACD > lag(MACD), "Bullish Divergence",
ifelse(dt$Low > lag(dt$Low) & Price_Change > 0 & MACD < lag(MACD), "Bearish Divergence", NA_character_))
) %>%
# Générer les signaux d'achat, de vente ou de conserver en fonction des divergences
mutate(
Decision_MACD = case_when(
Divergence == "Bullish Divergence" ~ "Achat",
Divergence == "Bearish Divergence" ~ "Vente",
TRUE ~ "Conserver"
)
)
}
# Fonction pour calculer les signaux d'achat, de vente ou de conserver basés sur les divergences MACD
calculate_macd_signals <- function(dt) {
dt %>%
mutate(
# Initialiser Price_Change avec NA à la première ligne
Price_Change = c(NA, diff(Close)),
# Calculer l'indicateur MACD
MACD = MACD(Cl(dt), nFast = 12, nSlow = 26, nSig = 9),
# Identifier les divergences
Divergence = ifelse(dt$High < lag(dt$High) & Price_Change < 0 & MACD > lag(MACD), "Bullish Divergence",
ifelse(dt$Low > lag(dt$Low) & Price_Change > 0 & MACD < lag(MACD), "Bearish Divergence", NA_character_))
) %>%
# Générer les signaux d'achat, de vente ou de conserver en fonction des divergences
mutate(
Decision_MACD = case_when(
Divergence == "Bullish Divergence" ~ "Achat",
Divergence == "Bearish Divergence" ~ "Vente",
TRUE ~ "Conserver"
)
)
}
# Appliquer la fonction pour calculer les signaux MACD
dt_with_macd_signals <- calculate_macd_signals(dt_price)
library(rvest)
library(dplyr)
quotes_tbl <- rvest::read_html("https://www.brvm.org/en/cours-actions/0/status/200") %>%
rvest::html_nodes('table') %>%
rvest::html_table()
quotes_tbl <- quotes_tbl[[4]]
quotes_tbl$`Change (%)`<-gsub(",", ".", quotes_tbl$`Change (%)`)
quotes_tbl$`Change (%)`<-as.numeric(quotes_tbl$`Change (%)`)
quotes_tbl$Volume<-gsub(" ", "", quotes_tbl$Volume)
quotes_tbl$Volume<-as.numeric(quotes_tbl$Volume)
quotes_tbl$`Previous price`<-gsub(" ", "", quotes_tbl$`Previous price`)
quotes_tbl$`Previous price`<-as.numeric(quotes_tbl$`Previous price`)
quotes_tbl$`Opening price`<-gsub(" ", "", quotes_tbl$`Opening price`)
quotes_tbl$`Opening price`<-as.numeric(quotes_tbl$`Opening price`)
quotes_tbl$`Closing price`<-gsub(" ", "", quotes_tbl$`Closing price`)
quotes_tbl$`Closing price`<-as.numeric(quotes_tbl$`Closing price`)
colnames(quotes_tbl)<-c(
"ticker",
"company_name",
"volume",
"previous_price",
"open",
"close",
"percent_change")
quotes_tbl$rank <- rank(-quotes_tbl$`percent_change`)
quotes_tbl[order(-quotes_tbl$`percent_change`),]
save.image()
usethis::use_release_issue()
usethis::use_cran_comments()
devtools::build_readme()
urlchecker::url_check()
devtools::check(remote = TRUE, manual = TRUE)
devtools::check_win_devel()
rhub::check_for_cran()
usethis::use_version('major')
devtools::submit_cran()
library(BRVM)
BRVM_company_rank()
BRVM_company_rank()
quotes_tbl <- rvest::read_html("https://www.brvm.org/en/cours-actions/0/status/200") %>%
rvest::html_nodes('table') %>%
rvest::html_table()
quotes_tbl <- quotes_tbl[[4]]
numeric_columns <- c("Change (%)", "Volume", "Previous price", "Opening price", "Closing price")
# Convertir les colonnes en numérique
quotes_tbl <- quotes_tbl %>%
dplyr::mutate(across(numeric_columns, ~as.numeric(gsub(",", ".", .))))
View(quotes_tbl)
quotes_tbl <- rvest::read_html("https://www.brvm.org/en/cours-actions/0/status/200") %>%
rvest::html_nodes('table') %>%
rvest::html_table()
quotes_tbl <- quotes_tbl[[4]]
numeric_columns <- c("Change (%)", "Volume", "Previous price", "Opening price", "Closing price")
quotes_tbl <- quotes_tbl %>%
dplyr::mutate(across(all_of(numeric_columns), ~as.numeric(gsub(",", ".", .))))
View(quotes_tbl)
View(quotes_tbl)
quotes_tbl <- rvest::read_html("https://www.brvm.org/en/cours-actions/0/status/200") %>%
rvest::html_nodes('table') %>%
rvest::html_table()
quotes_tbl <- quotes_tbl[[4]]
head(quotes_tbl)
head(quotes_tbl, 15)
# Convertir les colonnes en numérique
quotes_tbl <- quotes_tbl %>%
dplyr::mutate(across(numeric_columns, ~(gsub("", ".", .))))
quotes_tbl <- rvest::read_html("https://www.brvm.org/en/cours-actions/0/status/200") %>%
rvest::html_nodes('table') %>%
rvest::html_table()
quotes_tbl <- quotes_tbl[[4]]
# Convertir les colonnes en numérique
quotes_tbl <- quotes_tbl %>%
dplyr::mutate(across(numeric_columns, ~(gsub(" ", "", .))))
str(quotes_tbl)
quotes_tbl <- quotes_tbl %>%
dplyr::mutate(across(all_of(numeric_columns), ~as.numeric(gsub(",", ".", .))))
str(quotes_tbl)
BRVM_company_rank <- function(){
tryCatch(
{
quotes_tbl <- rvest::read_html("https://www.brvm.org/en/cours-actions/0/status/200") %>%
rvest::html_nodes('table') %>%
rvest::html_table()
quotes_tbl <- quotes_tbl[[4]]
# quotes_tbl$`Change (%)`<-gsub(",", ".", quotes_tbl$`Change (%)`)
# quotes_tbl$`Change (%)`<-as.numeric(quotes_tbl$`Change (%)`)
# quotes_tbl$Volume<-gsub(" ", "", quotes_tbl$Volume)
# quotes_tbl$Volume<-as.numeric(quotes_tbl$Volume)
# quotes_tbl$`Previous price`<-gsub(" ", "", quotes_tbl$`Previous price`)
# quotes_tbl$`Previous price`<-as.numeric(quotes_tbl$`Previous price`)
# quotes_tbl$`Opening price`<-gsub(" ", "", quotes_tbl$`Opening price`)
# quotes_tbl$`Opening price`<-as.numeric(quotes_tbl$`Opening price`)
# quotes_tbl$`Closing price`<-gsub(" ", "", quotes_tbl$`Closing price`)
# quotes_tbl$`Closing price`<-as.numeric(quotes_tbl$`Closing price`)
# Mes colonnes numeriques
numeric_columns <- c("Change (%)", "Volume", "Previous price", "Opening price", "Closing price")
# Enlever les espaces vides
quotes_tbl <- quotes_tbl %>%
dplyr::mutate(across(numeric_columns, ~(gsub(" ", "", .))))
quotes_tbl <- quotes_tbl %>%
dplyr::mutate(across(all_of(numeric_columns), ~as.numeric(gsub(",", ".", .))))
colnames(quotes_tbl)<-c(
"ticker",
"company_name",
"volume",
"previous_price",
"open",
"close",
"percent_change")
quotes_tbl$rank <- rank(-quotes_tbl$`percent_change`)
# Use order() instead
quotes_tbl <- quotes_tbl[order(-quotes_tbl$`percent_change`),]
#quotes_tbl <-dplyr::arrange(quotes_tbl, dplyr::desc(quotes_tbl$`percent_change`))
# quotes_tbl <- quotes_tbl[sort(quotes_tbl$rank), ]
return(quotes_tbl[c(1,2,7,8)])
},
error = function(e) {
message("Make sure you have an active internet connection")
},
warning = function(w) {
message("Make sure you have an active internet connection")
}
)
}
BRVM_company_rank()
rm(quotes_tbl)
usethis::use_release_issue()
usethis::use_cran_comments()
devtools::build_readme()
urlchecker::url_check()
devtools::check(remote = TRUE, manual = TRUE)
rm("BRVM_company_rank")
devtools::build_readme()
devtools::check(remote = TRUE, manual = TRUE)
devtools::check_win_devel()
rhub::check_for_cran()
usethis::use_version('minor')
usethis::use_version('minor')
devtools::submit_cran()
usethis::use_release_issue()
usethis::use_cran_comments()
library(BRVM)
BRVM_company_rank()
detach("package:BRVM", unload = TRUE)
git pull
devtools::build_readme()
urlchecker::url_check()
devtools::check(remote = TRUE, manual = TRUE)
devtools::check_win_devel()
rhub::check_for_cran()
usethis::use_version('patch')
usethis::use_version('patch')
usethis::use_version('patch')
devtools::submit_cran()
usethis::use_release_issue()
usethis::use_cran_comments()
devtools::build_readme()
urlchecker::url_check()
devtools::check(remote = TRUE, manual = TRUE)
devtools::check_win_devel()
rhub::check_for_cran()
usethis::use_version('minor')
usethis::use_version('minor')
usethis::use_version('minor')
devtools::submit_cran()
url <- "https://www.brvm.org/en/cours-actions/0"
library(httr)
headers <- c(
"accept" = "*/*",
"accept-language" = "fr-FR,fr;q=0.9,en-US;q=0.8,en;q=0.7",
"content-type" = "application/x-www-form-urlencoded; charset=UTF-8",
"sec-ch-ua" = "\"Not_A Brand\";v=\"8\", \"Chromium\";v=\"120\", \"Google Chrome\";v=\"120\"",
"sec-ch-ua-mobile" = "?0",
"sec-ch-ua-platform" = "\"Windows\"",
"sec-fetch-dest" = "empty",
"sec-fetch-mode" = "cors",
"sec-fetch-site" = "same-origin",
"x-requested-with" = "XMLHttpRequest"
)
response <- GET(url, encode = "form")
View(response)
quotes_tbl <- content(response, encoding = "UTF-8") %>%
rvest::html_nodes('table') %>%
rvest::html_table()
quotes_tbl <- content(response, encoding = "UTF-8") %>%
rvest::html_nodes('table') %>%
rvest::html_table()
View(quotes_tbl)
quotes_tbl <- quotes_tbl[[4]]
str(quotes_tbl)
print(quotes_tbl$Volume)
as.numeric(gsub(" ", "", quotes_tbl$Volume))
print(quotes_tbl$`Previous price`)
as.numeric(gsub(",", ".", quotes_tbl$`Change (%)`))
as.numeric(gsub(" ", "", quotes_tbl$`Previous price`))
as.numeric(gsub(" ", "", quotes_tbl$`Opening price`))
quotes_tbl$Volume <- as.numeric(gsub(" ", "", quotes_tbl$Volume))
quotes_tbl$`Previous price`<- as.numeric(gsub(" ", "", quotes_tbl$`Previous price`))
quotes_tbl$`Opening price`<- as.numeric(gsub(" ", "", quotes_tbl$`Opening price`))
quotes_tbl$`Closing price`<- as.numeric(gsub(" ", "", quotes_tbl$`Closing price`))
quotes_tbl$`Change (%)`<- as.numeric(gsub(",", ".", quotes_tbl$`Change (%)`))
colnames(quotes_tbl)<-c(
"ticker",
"company_name",
"volume",
"previous_price",
"open",
"close",
"percent_change")
View(quotes_tbl)
str(quotes_tbl)
quotes_tbl$rank <- base::rank(-quotes_tbl$`percent_change`)
# Use order() instead
quotes_tbl <- quotes_tbl[base::order(-quotes_tbl$`percent_change`),]
quotes_tbl
url <- "https://www.brvm.org/en/cours-actions/0"
response <- GET(url, encode = "form")
quotes_tbl <- content(response, encoding = "UTF-8") %>%
rvest::html_nodes('table') %>%
rvest::html_table()
BRVM_company_rank <- function(){
tryCatch(
{
quotes_tbl <- rvest::read_html("https://www.brvm.org/en/cours-actions/0") %>%
# quotes_tbl <- rvest::read_html("https://www.brvm.org/en/cours-actions/0/status/200") %>%
rvest::html_elements('table') %>%
rvest::html_table()
quotes_tbl <- quotes_tbl[[4]]
# quotes_tbl$`Change (%)`<-gsub(",", ".", quotes_tbl$`Change (%)`)
# quotes_tbl$`Change (%)`<-as.numeric(quotes_tbl$`Change (%)`)
# quotes_tbl$Volume<-gsub(" ", "", quotes_tbl$Volume)
# quotes_tbl$Volume<-as.numeric(quotes_tbl$Volume)
# quotes_tbl$`Previous price`<- gsub(" ", "", quotes_tbl$`Previous price`)
# quotes_tbl$`Previous price`<- as.numeric(quotes_tbl$`Previous price`)
# quotes_tbl$`Opening price`<- gsub(" ", "", quotes_tbl$`Opening price`)
# quotes_tbl$`Opening price`<- as.numeric(quotes_tbl$`Opening price`)
# quotes_tbl$`Closing price`<- gsub(" ", "", quotes_tbl$`Closing price`)
# quotes_tbl$`Closing price`<- as.numeric(quotes_tbl$`Closing price`)
# Mes colonnes numeriques
numeric_columns <- c("Change (%)", "Volume", "Previous price", "Opening price", "Closing price")
# Enlever les espaces vides
quotes_tbl <- quotes_tbl %>%
dplyr::mutate(across(numeric_columns, ~(gsub(" ", "", .))))
quotes_tbl <- quotes_tbl %>%
dplyr::mutate(across(all_of(numeric_columns), ~as.numeric(gsub(",", ".", .))))
colnames(quotes_tbl)<-c(
"ticker",
"company_name",
"volume",
"previous_price",
"open",
"close",
"percent_change")
quotes_tbl$rank <- base::rank(-quotes_tbl$`percent_change`)
# Use order() instead
quotes_tbl <- quotes_tbl[base::order(-quotes_tbl$`percent_change`),]
#quotes_tbl <-dplyr::arrange(quotes_tbl, dplyr::desc(quotes_tbl$`percent_change`))
# quotes_tbl <- quotes_tbl[sort(quotes_tbl$rank), ]
return(quotes_tbl[c(1,2,7,8)])
},
error = function(e) {
message("Make sure you have an active internet connection")
},
warning = function(w) {
message("Make sure you have an active internet connection")
}
)
}
comp.rank <- BRVM_company_rank()
library(rvest)
BRVM_company_rank <- function(){
tryCatch(
{
quotes_tbl <- rvest::read_html("https://www.brvm.org/en/cours-actions/0") %>%
# quotes_tbl <- rvest::read_html("https://www.brvm.org/en/cours-actions/0/status/200") %>%
rvest::html_elements('table') %>%
rvest::html_table()
quotes_tbl <- quotes_tbl[[4]]
# quotes_tbl$`Change (%)`<-gsub(",", ".", quotes_tbl$`Change (%)`)
# quotes_tbl$`Change (%)`<-as.numeric(quotes_tbl$`Change (%)`)
# quotes_tbl$Volume<-gsub(" ", "", quotes_tbl$Volume)
# quotes_tbl$Volume<-as.numeric(quotes_tbl$Volume)
# quotes_tbl$`Previous price`<- gsub(" ", "", quotes_tbl$`Previous price`)
# quotes_tbl$`Previous price`<- as.numeric(quotes_tbl$`Previous price`)
# quotes_tbl$`Opening price`<- gsub(" ", "", quotes_tbl$`Opening price`)
# quotes_tbl$`Opening price`<- as.numeric(quotes_tbl$`Opening price`)
# quotes_tbl$`Closing price`<- gsub(" ", "", quotes_tbl$`Closing price`)
# quotes_tbl$`Closing price`<- as.numeric(quotes_tbl$`Closing price`)
# Mes colonnes numeriques
numeric_columns <- c("Change (%)", "Volume", "Previous price", "Opening price", "Closing price")
# Enlever les espaces vides
quotes_tbl <- quotes_tbl %>%
dplyr::mutate(across(numeric_columns, ~(gsub(" ", "", .))))
quotes_tbl <- quotes_tbl %>%
dplyr::mutate(across(all_of(numeric_columns), ~as.numeric(gsub(",", ".", .))))
colnames(quotes_tbl)<-c(
"ticker",
"company_name",
"volume",
"previous_price",
"open",
"close",
"percent_change")
quotes_tbl$rank <- base::rank(-quotes_tbl$`percent_change`)
# Use order() instead
quotes_tbl <- quotes_tbl[base::order(-quotes_tbl$`percent_change`),]
#quotes_tbl <-dplyr::arrange(quotes_tbl, dplyr::desc(quotes_tbl$`percent_change`))
# quotes_tbl <- quotes_tbl[sort(quotes_tbl$rank), ]
return(quotes_tbl[c(1,2,7,8)])
},
error = function(e) {
message("Make sure you have an active internet connection")
},
warning = function(w) {
message("Make sure you have an active internet connection")
}
)
}
comp.rank <- BRVM_company_rank()
View(comp.rank)
comp.rank<-comp.rank%>%
dplyr::arrange(desc(percent_change))
View(comp.rank)
comp.rank
usethis::use_cran_comments()
urlchecker::url_check()
devtools::check(remote = TRUE, manual = TRUE)
library(dplyr)
devtools::check_win_devel()
rhub::check_for_cran()
rhub::check_for_cran()
devtools::check(remote = TRUE, manual = TRUE)
devtools::check_win_devel()
rhub::check_for_cran()
BRVM_company_rank_bis <- function(){
tryCatch(
{
url <- "https://www.brvm.org/en/cours-actions/0"
response <- httr::GET(url, encode = "form")
quotes_tbl <- content(response, encoding = "UTF-8") %>%
rvest::html_elements('table') %>%
rvest::html_table()
quotes_tbl <- quotes_tbl[[4]]
quotes_tbl$Volume <- as.numeric(gsub(" ", "", quotes_tbl$Volume))
quotes_tbl$`Previous price`<- as.numeric(gsub(" ", "", quotes_tbl$`Previous price`))
quotes_tbl$`Opening price`<- as.numeric(gsub(" ", "", quotes_tbl$`Opening price`))
quotes_tbl$`Closing price`<- as.numeric(gsub(" ", "", quotes_tbl$`Closing price`))
quotes_tbl$`Change (%)`<- as.numeric(gsub(",", ".", quotes_tbl$`Change (%)`))
colnames(quotes_tbl)<-c(
"ticker",
"company_name",
"volume",
"previous_price",
"open",
"close",
"percent_change")
quotes_tbl$rank <- base::rank(-quotes_tbl$`percent_change`)
# Use order() instead
quotes_tbl <- quotes_tbl[base::order(-quotes_tbl$`percent_change`),]
return(quotes_tbl[c(1,2,7,8)])
},
error = function(e) {
message("Make sure you have an active internet connection")
},
warning = function(w) {
message("Make sure you have an active internet connection")
}
)
}
BRVM_company_rank()
devtools::check(remote = TRUE, manual = TRUE)
BRVM_company_rank <- function(){
tryCatch(
{
url <- "https://www.brvm.org/en/cours-actions/0"
response <- httr::GET(url, encode = "form")
quotes_tbl <- content(response, encoding = "UTF-8") %>%
rvest::html_elements('table') %>%
rvest::html_table()
quotes_tbl <- quotes_tbl[[4]]
quotes_tbl$Volume <- as.numeric(gsub(" ", "", quotes_tbl$Volume))
quotes_tbl$`Previous price`<- as.numeric(gsub(" ", "", quotes_tbl$`Previous price`))
quotes_tbl$`Opening price`<- as.numeric(gsub(" ", "", quotes_tbl$`Opening price`))
quotes_tbl$`Closing price`<- as.numeric(gsub(" ", "", quotes_tbl$`Closing price`))
quotes_tbl$`Change (%)`<- as.numeric(gsub(",", ".", quotes_tbl$`Change (%)`))
colnames(quotes_tbl)<-c(
"ticker",
"company_name",
"volume",
"previous_price",
"open",
"close",
"percent_change")
quotes_tbl$rank <- base::rank(-quotes_tbl$`percent_change`)
# Use order() instead
quotes_tbl <- quotes_tbl[base::order(-quotes_tbl$`percent_change`),]
return(quotes_tbl[c(1,2,7,8)])
},
error = function(e) {
message("Make sure you have an active internet connection")
},
warning = function(w) {
message("Make sure you have an active internet connection")
}
)
}
BRVM_company_rank()
devtools::check(remote = TRUE, manual = TRUE)
devtools::check_win_devel()
rhub::check_for_cran()
