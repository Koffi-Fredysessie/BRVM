ggpairs(fullInd[, c("Close", "Volume", "Liquidity", "Ticker")],
aes(color=Ticker),
upper=list(continuous= wrap(ggally_cor, size = 5)),
lower=list(continuous="smooth"
# , params=list(method="lm")
),
diag=list(continuous="density")) +
labs(title="Correlogramme de la dataframe",
caption="Source: Auteurs") +
theme(text=element_text(size=5),
legend.text=element_text(size=8))
ggpairs(fullInd,columns=c("Close", "Volume", "Liquidity"),
aes(color=Ticker),
upper=list(continuous= wrap(ggally_cor, size = 5)),
lower=list(continuous="smooth"
# , params=list(method="lm")
),
diag=list(continuous="density")) +
labs(title="Correlogramme de la dataframe",
caption="Source: Auteurs") +
theme(text=element_text(size=5),
legend.text=element_text(size=8))
ggpairs(fullInd,columns=c("Close", "Volume", "Liquidity"),
aes(color=Ticker),
upper=list(continuous= wrap(ggally_cor, size = 2)),
lower=list(continuous="smooth"
# , params=list(method="lm")
),
diag=list(continuous="density")) +
labs(title="Correlogramme de la dataframe",
caption="Source: Auteurs") +
theme(text=element_text(size=3),
legend.text=element_text(size=8))
ggpairs(fullInd,columns=c("Close", "Volume", "Liquidity"),
aes(color=Ticker),
upper=list(continuous= wrap(ggally_cor, size = 2)),
lower=list(continuous="smooth"
# , params=list(method="lm")
),
diag=list(continuous="densityDiag")) +
labs(title="Correlogramme de la dataframe",
caption="Source: Auteurs") +
theme(text=element_text(size=3),
legend.text=element_text(size=8))
ggpairs(fullInd,columns=c("Close", "Volume", "Liquidity"),
aes(color=Ticker),
upper=list(continuous= wrap(ggally_cor, size = 2)),
lower=list(continuous="smooth"
# , params=list(method="lm")
),
diag=list(continuous="densityDiag")) +
labs(title="Correlogramme de la dataframe",
caption="Source: Auteurs") +
theme(text=element_text(size=4),
legend.text=element_text(size=8))
ggpairs(fullInd,columns=c("Close", "Volume", "Liquidity"),
aes(color=Ticker),
upper=list(continuous= wrap(ggally_cor, size = 2)),
lower=list(continuous="smooth"
# , params=list(method="lm")
),
diag=list(continuous="densityDiag")) +
labs(title="Correlogramme de la dataframe",
caption="Source: Auteurs") +
theme(text=element_text(size=4),
legend.text=element_text(size=10))
ggpairs(fullInd,columns=c("Close", "Volume", "Liquidity"),
aes(color=Ticker),
upper=list(continuous= wrap(ggally_cor, size = 5)),
lower=list(continuous="smooth"
# , params=list(method="lm")
),
diag=list(continuous="densityDiag")) +
labs(title="Correlogramme de la dataframe",
caption="Source: Auteurs") +
theme(text=element_text(size=4),
legend.text=element_text(size=10))
ggpairs(fullInd,columns=c("Close", "Volume", "Liquidity"),
aes(color=Ticker),
upper=list(continuous= wrap(ggally_cor, size = 4)),
lower=list(continuous="smooth"
# , params=list(method="lm")
),
diag=list(continuous="densityDiag")) +
labs(title="Correlogramme de la dataframe",
caption="Source: Auteurs") +
theme(text=element_text(size=20),
legend.text=element_text(size=20))
ggpairs(fullInd,columns=c("Close", "Volume", "Liquidity"),
aes(color=Ticker),
upper=list(continuous= wrap(ggally_cor, size = 4)),
lower=list(continuous="smooth"
# , params=list(method="lm")
),
diag=list(continuous="densityDiag")) +
labs(title="Correlogramme de la dataframe",
caption="Source: Auteurs") +
theme(text=element_text(size=15),
legend.text=element_text(size=20))
ggpairs(fullInd,columns=c("Close", "Volume", "Liquidity"),
aes(color=Ticker),
upper=list(continuous= wrap(ggally_cor, size = 3.5)),
lower=list(continuous="smooth"
# , params=list(method="lm")
),
diag=list(continuous="densityDiag")) +
labs(title="Correlogramme de la dataframe",
caption="Source: Auteurs") +
theme(text=element_text(size=15),
legend.text=element_text(size=20))
ggpairs(fullInd,columns=c("Close", "Volume", "Liquidity"),
aes(color=Ticker),
upper=list(continuous= wrap(ggally_cor, size = 3.5)),
lower=list(continuous="smooth"
# , params=list(method="lm")
),
diag=list(continuous="densityDiag")) +
labs(title="Correlogramme de la dataframe",
caption="Source: Auteurs") +
theme_tufte()
library(ggthemes)
install.packages("ggthemes")
library(ggthemes)
ggpairs(fullInd,columns=c("Close", "Volume", "Liquidity"),
aes(color=Ticker),
upper=list(continuous= wrap(ggally_cor, size = 3.5)),
lower=list(continuous="smooth"
# , params=list(method="lm")
),
diag=list(continuous="densityDiag")) +
labs(title="Correlogramme de la dataframe",
caption="Source: Auteurs") +
theme_tufte()
ggpairs(fullInd,columns=c("Close", "Volume", "Liquidity"),
aes(color=Ticker),
upper=list(continuous= wrap(ggally_cor, size = 3.5)),
lower=list(continuous="smooth"
# , params=list(method="lm")
),
diag=list(continuous="densityDiag")) +
labs(title="Correlogramme de la dataframe",
caption="Source: Auteurs") +
# theme_tufte()+
+ theme_bw()
ggpairs(fullInd,columns=c("Close", "Volume", "Liquidity"),
aes(color=Ticker),
upper=list(continuous= wrap(ggally_cor, size = 3.5)),
lower=list(continuous="smooth"
# , params=list(method="lm")
),
diag=list(continuous="densityDiag")) +
labs(title="Correlogramme de la dataframe",
caption="Source: Auteurs") +
# theme_tufte()+
theme_bw()
library(ggcorrplot)
install.packages("ggcorrplot")
library(ggcorrplot)
corr_df <- fullInd[, c("Close", "Volume", "Liquidity")]
corr_matrix <- cor(corr_df)
ggcorrplot(corr_matrix,
type = "upper",
colors = c("CABC" = "#FF0000", "FTSC" = "#00FF00", "NTLC" = "#0000FF", "SEMC" = "#FF00FF"))
ggcorrplot(cor(data[,c("Close","Volume","Liquidity")]),
hc.order = TRUE,
type = "lower",
colors = c("#6D9EC1", "white", "#E46726"),
legend.title = "Correlation",
ggtheme = ggplot2::theme_gray,
title="Correlogramme des données par Ticker")
ggcorrplot(cor(fullInd[,c("Close","Volume","Liquidity")]),
hc.order = TRUE,
type = "lower",
colors = c("#6D9EC1", "white", "#E46726"),
legend.title = "Correlation",
ggtheme = ggplot2::theme_gray,
title="Correlogramme des données par Ticker")
df_pivot <- pivot_wider(fullInd, names_from = Ticker, values_from = c(Close, Volume, Liquidity))
View(df_pivot)
ggcorrplot(cor(df_pivot[, , 1]), hc.order = TRUE, type = "lower", colors = c("#6D9EC1", "#EFC000", "#C83803"))
ggcorrplot(cor(df_pivot[,- 1]), hc.order = TRUE, type = "lower", colors = c("#6D9EC1", "#EFC000", "#C83803"))
ggpairs(fullInd, columns = c("Close", "Volume", "Liquidity"),
ggplot2::aes(color = Ticker), upper = list(continuous = "cor"))
ggpairs(fullInd,columns=c("Close", "Volume", "Liquidity"),
aes(color=Ticker),
upper = list(continuous = wrap("density", alpha = 0.5), combo = "box_no_facet"),
# upper=list(continuous= wrap(ggally_cor, size = 3.5)),
lower=list(continuous="smooth"
# , params=list(method="lm")
),
diag=list(continuous="densityDiag")) +
labs(title="Correlogramme de la dataframe",
caption="Source: Auteurs") +
# theme_tufte()
theme_bw()
ggpairs(fullInd,columns=c("Close", "Volume", "Liquidity"),
aes(color=Ticker),
upper = list(continuous = wrap("density", alpha = 0.5)
# , combo = "box_no_facet"
),
# upper=list(continuous= wrap(ggally_cor, size = 3.5)),
lower=list(continuous="smooth"
# , params=list(method="lm")
),
diag=list(continuous="densityDiag")) +
labs(title="Correlogramme de la dataframe",
caption="Source: Auteurs") +
# theme_tufte()
theme_bw()
ggpairs(fullInd,columns=c("Close", "Volume", "Liquidity"),
aes(color=Ticker),
# upper = list(continuous = wrap("density", alpha = 0.5)
# , combo = "box_no_facet"
# ),
upper=list(continuous= wrap(ggally_cor, size = 3.5)),
lower = list(continuous = wrap("points", alpha = 0.3), combo = wrap("dot_no_facet", alpha = 0.4)),
# lower=list(continuous="smooth"
#            # , params=list(method="lm")
#            ),
diag=list(continuous="densityDiag")) +
labs(title="Correlogramme de la dataframe",
caption="Source: Auteurs") +
# theme_tufte()
theme_bw()
ggpairs(fullInd,columns=c("Close", "Volume", "Liquidity"),
aes(color=Ticker),
# upper = list(continuous = wrap("density", alpha = 0.5)
# , combo = "box_no_facet"
# ),
upper=list(continuous= wrap(ggally_cor, size = 3.5)),
lower = list(continuous = wrap("points", alpha = 0.3), combo = wrap("dot_no_facet", alpha = 0.4)),
# lower=list(continuous="smooth"
#            # , params=list(method="lm")
#            ),
diag=list(continuous="densityDiag"),
axisLabels = "internal") +
labs(title="Correlogramme de la dataframe",
caption="Source: Auteurs") +
# theme_tufte()
theme_bw()
ggpairs(fullInd,columns=c("Close", "Volume", "Liquidity"),
aes(color=Ticker),
# upper = list(continuous = wrap("density", alpha = 0.5)
# , combo = "box_no_facet"
# ),
upper=list(continuous= wrap(ggally_cor, size = 3.5)),
lower = list(continuous = wrap("points", alpha = 0.3), combo = wrap("dot_no_facet", alpha = 0.4)),
# lower=list(continuous="smooth"
#            # , params=list(method="lm")
#            ),
diag = list(combo = wrap("facethist", binwidth = 0.5)),
# lower = list(combo = wrap("facethist", binwidth = 0.5)),
# diag=list(continuous="densityDiag")
) +
labs(title="Correlogramme de la dataframe",
caption="Source: Auteurs") +
# theme_tufte()
theme_bw()
ggpairs(fullInd,columns=c("Close", "Volume", "Liquidity"),
aes(color=Ticker))
ggpairs(fullInd,columns=c("Close", "Volume", "Liquidity"),
aes(color=Ticker),
# upper = list(continuous = wrap("density", alpha = 0.5)
# , combo = "box_no_facet"
# ),
upper=list(continuous= wrap(ggally_cor, size = 3.5)),
# lower = list(continuous = wrap("points", alpha = 0.3), combo = wrap("dot_no_facet", alpha = 0.4)),
# lower=list(continuous="smooth"
#            # , params=list(method="lm")
#            ),
diag = list(combo = wrap("facethist", binwidth = 0.5)),
lower = list(combo = wrap("facethist", binwidth = 0.5)),
# diag=list(continuous="densityDiag")
) +
labs(title="Correlogramme de la dataframe",
caption="Source: Auteurs") +
# theme_tufte()
theme_bw()
ggpairs(fullInd,columns=c("Close", "Volume", "Liquidity"),
aes(color=Ticker),
columnLabels =c("Cours de Clôture", "Volume", "Liquidité"),
# upper = list(continuous = wrap("density", alpha = 0.5)
# , combo = "box_no_facet"
# ),
upper=list(continuous= wrap(ggally_cor, size = 3.5)),
# lower = list(continuous = wrap("points", alpha = 0.3), combo = wrap("dot_no_facet", alpha = 0.4)),
# lower=list(continuous="smooth"
#            # , params=list(method="lm")
#            ),
diag = list(combo = wrap("facethist", binwidth = 0.5)),
lower = list(combo = wrap("facethist", binwidth = 0.5)),
# diag=list(continuous="densityDiag")
) +
labs(title="Correlogramme de la dataframe",
caption="Source: Auteurs") +
# theme_tufte()
theme_bw()
ggpairs(fullInd,columns=c("Close", "Volume", "Liquidity"),
aes(color=Ticker),
columnLabels =c("Cours de Clôture", "Volume", "Liquidité"),
# upper = list(continuous = wrap("density", alpha = 0.5)
# , combo = "box_no_facet"
# ),
upper=list(continuous= wrap(ggally_cor, size = 3.5)),
# lower = list(continuous = wrap("points", alpha = 0.6), combo = wrap("dot_no_facet", alpha = 0.4)),
# lower=list(continuous="smooth"
#            # , params=list(method="lm")
#            ),
diag = list(combo = wrap("facethist", binwidth = 0.5)),
lower = list(combo = wrap("facethist", binwidth = 0.8)),
# diag=list(continuous="densityDiag")
) +
labs(title="Correlogramme de la dataframe",
caption="Source: Auteurs") +
# theme_tufte()
theme_bw()
ggpairs(fullInd,columns=c("Close", "Volume", "Liquidity"),
mapping = ggplot2::aes(color = Ticker),
# aes(color=Ticker),
columnLabels =c("Cours de Clôture", "Volume", "Liquidité"),
# upper = list(continuous = wrap("density", alpha = 0.5)
# , combo = "box_no_facet"
# ),
upper=list(continuous= wrap(ggally_cor, size = 3.5)),
# lower = list(continuous = wrap("points", alpha = 0.6), combo = wrap("dot_no_facet", alpha = 0.4)),
# lower=list(continuous="smooth"
#            # , params=list(method="lm")
#            ),
diag = list(combo = wrap("facethist", binwidth = 0.5)),
lower = list(combo = wrap("facethist", binwidth = 0.8)),
# diag=list(continuous="densityDiag")
) +
labs(title="Correlogramme de la dataframe",
caption="Source: Auteurs") +
# theme_tufte()
theme_bw()
histogRam <- function(data, mapping, ...) {
ggplot(data = data, mapping = mapping) +
geom_histogram(...) +
theme_minimal() +
theme(panel.grid = element_blank())
}
# Création du correlogramme avec les histogrammes en diagonale
ggpairs(fullInd, columns = c("Close", "Volume", "Liquidity"),
ggplot2::aes(color = Ticker), upper = list(continuous = "cor"),
diag = list(continuous = histogRam))
ggpairs(fullInd, columns = c("Close", "Volume", "Liquidity"),
ggplot2::aes(color = Ticker),
upper = list(continuous = "cor"),
diag = list(continuous = ggally_diagBoxplot))
# Création du correlogramme avec les histogrammes en diagonale
ggpairs(fullDis, columns = c("Close", "Volume", "Liquidity"),
ggplot2::aes(color = Ticker), upper = list(continuous = "cor"),
diag = list(continuous = histogRam))
# Création du correlogramme avec les histogrammes en diagonale
ggpairs(fullDis, columns = c("Close", "Volume", "Liquidity"),
ggplot2::aes(color = Ticker), upper = list(continuous = "cor"),
diag = list(continuous = histogRam),
columnLabels =c("Cours de Clôture", "Volume", "Liquidité"),)
# Création du correlogramme avec les histogrammes en diagonale
ggpairs(fullDis, columns = c("Close", "Volume", "Liquidity"),
ggplot2::aes(color = Ticker),        upper = list(continuous = wrap("density", alpha = 0.5)
, combo = "box_no_facet"
),
diag = list(continuous = histogRam),
columnLabels =c("Cours de Clôture", "Volume", "Liquidité"),)
# Création du correlogramme avec les histogrammes en diagonale
ggpairs(fullDis, columns = c("Close", "Volume", "Liquidity"),
ggplot2::aes(color = Ticker),        upper = list(continuous = wrap("density", alpha = 0.5), combo = "box_no_facet"),
diag = list(continuous = histogRam),
columnLabels =c("Cours de Clôture", "Volume", "Liquidité"),)
ggpairs(fullInd,columns=c("Close", "Volume", "Liquidity"),
mapping = ggplot2::aes(color = Ticker),
# aes(color=Ticker),
columnLabels =c("Cours de Clôture", "Volume", "Liquidité"),
# upper = list(continuous = wrap("density", alpha = 0.5)
# , combo = "box_no_facet"
# ),
upper=list(continuous= wrap(ggally_cor, size = 3.5)),
# lower = list(continuous = wrap("points", alpha = 0.6), combo = wrap("dot_no_facet", alpha = 0.4)),
# lower=list(continuous="smooth"
#            # , params=list(method="lm")
#            ),
diag = list(combo = wrap("facethist", binwidth = 0.5)),
lower = list(combo = wrap("facethist", binwidth = 0.8)),
# diag=list(continuous="densityDiag")
) +
labs(title="Correlogramme du secteur Industrie",
caption="Source: Auteurs") +
# theme_tufte()
theme_bw()
fullSp <-  merge(`BRVM_Stock_Public service`, BRVM_Liq_dt, by = c("Date", "Ticker"))
ggpairs(fullSp,columns=c("Close", "Volume", "Liquidity"),
mapping = ggplot2::aes(color = Ticker),
# aes(color=Ticker),
columnLabels =c("Cours de Clôture", "Volume", "Liquidité"),
# upper = list(continuous = wrap("density", alpha = 0.5)
# , combo = "box_no_facet"
# ),
upper=list(continuous= wrap(ggally_cor, size = 3.5)),
# lower = list(continuous = wrap("points", alpha = 0.6), combo = wrap("dot_no_facet", alpha = 0.4)),
# lower=list(continuous="smooth"
#            # , params=list(method="lm")
#            ),
diag = list(combo = wrap("facethist", binwidth = 0.5)),
lower = list(combo = wrap("facethist", binwidth = 0.8)),
# diag=list(continuous="densityDiag")
) +
labs(title="Correlogramme du secteur Industrie",
caption="Source: Auteurs") +
# theme_tufte()
theme_bw()
ggpairs(fullSp,columns=c("Close", "Volume", "Liquidity"),
mapping = ggplot2::aes(color = Ticker),
# aes(color=Ticker),
columnLabels =c("Cours de Clôture", "Volume", "Liquidité"),
# upper = list(continuous = wrap("density", alpha = 0.5)
# , combo = "box_no_facet"
# ),
upper=list(continuous= wrap(ggally_cor, size = 3.5)),
# lower = list(continuous = wrap("points", alpha = 0.6), combo = wrap("dot_no_facet", alpha = 0.4)),
# lower=list(continuous="smooth"
#            # , params=list(method="lm")
#            ),
diag = list(combo = wrap("facethist", binwidth = 0.5)),
lower = list(combo = wrap("facethist", binwidth = 0.8)),
# diag=list(continuous="densityDiag")
) +
labs(title="Correlogramme du secteur Service Public",
caption="Source: Auteurs") +
# theme_tufte()
theme_bw()
liq_corr <- function(data, main_text = "Correlogramme du secteur Service Public"){
the_plot= ggpairs(data,columns=c("Close", "Volume", "Liquidity"),
mapping = ggplot2::aes(color = Ticker),
# aes(color=Ticker),
columnLabels =c("Cours de Clôture", "Volume", "Liquidité"),
# upper = list(continuous = wrap("density", alpha = 0.5)
# , combo = "box_no_facet"
# ),
upper=list(continuous= wrap(ggally_cor, size = 3.5)),
# lower = list(continuous = wrap("points", alpha = 0.6), combo = wrap("dot_no_facet", alpha = 0.4)),
# lower=list(continuous="smooth"
#            # , params=list(method="lm")
#            ),
diag = list(combo = wrap("facethist", binwidth = 0.5)),
lower = list(combo = wrap("facethist", binwidth = 0.8)),
# diag=list(continuous="densityDiag")
) +
labs(title= main_text,
caption="Source: Auteurs") +
# theme_tufte()
theme_bw()
return(the_plot)
}
liq_corr(fullOther,
"Correlogramme du secteur BRVM-Autre secteur")
fullOther <-  merge(BRVM_Stock_Other, BRVM_Liq_dt, by = c("Date", "Ticker"))
liq_corr(fullOther,
"Correlogramme du secteur BRVM-Autre secteur")
fullTrans <-  merge(BRVM_Stock_Transport, BRVM_Liq_dt, by = c("Date", "Ticker"))
liq_corr(fullTrans,
"Correlogramme du secteur BRVM-transport")
ggpairs(fullTrans,columns=c("Close", "Volume", "Liquidity"), aes(color= Ticker),
columnLabels =c("Titres", "Cours de Clôture", "Volume", "Liquidité"))+
labs(title = "Corrélogramme BRVM-Transport",
caption = "Source: Auteurs")
ggpairs(fullTrans,columns=c("Close", "Volume", "Liquidity"), aes(color= Ticker),
columnLabels =c("Cours de Clôture", "Volume", "Liquidité"))+
labs(title = "Corrélogramme BRVM-Transport",
caption = "Source: Auteurs")
ggpairs(fullDis,columns=c("Close", "Volume", "Liquidity"), aes(color= Ticker),
columnLabels =c("Cours de Clôture", "Volume", "Liquidité"))+
labs(title = "Corrélogramme BRVM-Transport",
caption = "Source: Auteurs")
liq_corr(fullAgri,
"Correlogramme du secteur BRVM-Agriculture")
####Celui ci est meilleur
fullAgri  <-  merge(BRVM_Stock_Agriculture, BRVM_Liq_dt, by = c("Date", "Ticker"))
liq_corr(fullAgri,
"Correlogramme du secteur BRVM-Agriculture")
# Création de toutes les combinaisons de paires de variables et de Tickers
comb <- expand.grid(var1 = c("Close", "Volume", "Liquidity"),
var2 = c("Close", "Volume", "Liquidity"),
Ticker = unique(df$Ticker))
# Création de toutes les combinaisons de paires de variables et de Tickers
comb <- expand.grid(var1 = c("Close", "Volume", "Liquidity"),
var2 = c("Close", "Volume", "Liquidity"),
Ticker = unique(fullAgri$Ticker))
View(comb)
# Calcul des p-values pour chaque paire de variables et de Tickers
p_values <- apply(comb, 1, function(x) {
ggally_correlation(df[df$Ticker == x[3], c(x[1], x[2])])$p
})
# Calcul des p-values pour chaque paire de variables et de Tickers
p_values <- apply(comb, 1, function(x) {
ggally_correlation(fullAgri[fullAgri$Ticker == x[3], c(x[1], x[2])])$p
})
# Calcul des p-values pour chaque paire de variables et de Tickers
p_values <- apply(comb, 1, function(x) {
ggally_cor(fullAgri[fullAgri$Ticker == x[3], c(x[1], x[2])])$p
})
ggally_cor_v1_5(
fullAgri,
mapping = ggplot2::aes_string(x = "Close", y = "Volume", color = "Ticker"),
size = 5
)
fullFin
liq_corr(fullFin,
"Correlogramme du secteur BRVM-Finance")
install.packages("openai")
library(openai)
